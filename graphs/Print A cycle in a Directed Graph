 #include<bits/stdc++.h>
 using namespace std;
 vector<int> adj[100001];
 int par[100001]={0};
 int vis[100001]={0};
 int cs=-1,ce=-1;
 bool dfs(int v){
     vis[v]=1;
     for(auto i:adj[v])
       {
           if(vis[i]==1){
               ce=v;
               cs=i;
               return true;
           }
           else if(vis[i]==0){
               par[i]=v;
               if(dfs(i))  return true;
           }
       }
       vis[v]=2;
       return false;
 }
 int32_t main(){
   int n,m;  cin>>n>>m;
   for(int i=0;i<m;i++)  {
       int x,y;  cin>>x>>y;
       adj[x].push_back(y);
   }
   for(int i=1;i<=n;i++)  par[i]=-1;
   for(int i=1;i<=n;i++){
       if(vis[i]==0 && dfs(i))  break;
   }
  
  if(cs==-1)  cout<<"IMPOSSIBLE"<<endl;
  else {
      vector<int> cy;
      cy.push_back(cs);
      int v=ce;
      while(v!=cs){
          cy.push_back(v);
          v=par[v];
      }
      cy.push_back(cs);
      reverse(cy.begin(),cy.end());
      cout<<cy.size()<<endl;
      for(auto i:cy) cout<<i<<" ";
  }
 }
